{"version":3,"sources":["index.js"],"names":["rangeSlider","document","getElementById","rangeBullet","showSliderValue","innerHTML","value","bulletPosition","min","max","style","left","addEventListener","index","d3","json","then","dat","draw","selectAll","remove","visibility","select","classed","rect","height","marginV","marginH","marginT","svg","body","clientWidth","append","stop","dataEntry","length","dataValue","sort","x","y","total_global_sale","maxSale","node","average_global_sale","average_user_score","average_critic_score","maxlength","i","Math","publisher","font","intervalId","margin","maxHeight","groups","data","enter","labels","text","d","attr","on","console","log","clearInterval","game_global_sale","slice","game_name","gamelabels","rects","scale","scaleLinear","domain","range","transition","duration","_","xScale","xAxis","axisBottom","ticks","tickFormat","format","call","window","alert","updateElements","type","update","updateGraphType","setInterval"],"mappings":"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","file":"src.1df03040.js","sourceRoot":"../src","sourcesContent":["var rangeSlider = document.getElementById(\"year_slider\");\nvar rangeBullet = document.getElementById(\"rs-bullet\");\n\nrangeSlider.addEventListener(\"input\", showSliderValue, false);\n\nfunction showSliderValue() {\n  rangeBullet.innerHTML = rangeSlider.value;\n  var bulletPosition = ((rangeSlider.value - rangeSlider.min)/(rangeSlider.max - rangeSlider.min));\n  rangeBullet.style.left = (bulletPosition * 578) + \"px\";\n}\n\nlet index = 0;\nd3.json(\"https://raw.githubusercontent.com/UW-CSE442-WI20/A3-game-dev-pubg/master/src/game_data.json\").then( dat => {\n    function draw() {\n        // define the svg\n        d3.selectAll(\"svg > *\").remove();\n        document.getElementById(\"controller\").style.visibility = \"visible\";\n        document.getElementById(\"option\").style.visibility = \"visible\";\n        d3.select(\"#play_pause_button\").classed(\"paused\", false);\n\n        const rect = {height: 20, marginV: 10, marginH: 10, marginT: 40};\n        let mar = (document.body.clientWidth - 750)/ 2;\n        let svg = d3.select(\"svg\").append(\"g\");\n        let stop = false;\n\n        // load the initial data\n        \n        let dataEntry = dat[index % dat.length];\n\n        let dataValue = dataEntry[\"entities\"].sort((x, y) => y.total_global_sale - x.total_global_sale);\n        let maxSale = dataValue[0].total_global_sale;\n        if (d3.select(\"input[name='type']:checked\").node().value === \"average_global_sale\") {\n            dataValue = dataEntry[\"entities\"].sort((x, y) => y.average_global_sale - x.average_global_sale);\n            maxSale = dataValue[0].average_global_sale;\n        } else if (d3.select(\"input[name='type']:checked\").node().value === \"average_user_score\") {\n            dataValue = dataEntry[\"entities\"].sort((x, y) => y.average_user_score - x.average_user_score);\n            maxSale = dataValue[0].average_user_score;\n        } else if (d3.select(\"input[name='type']:checked\").node().value === \"average_critic_score\") {\n            dataValue = dataEntry[\"entities\"].sort((x, y) => y.average_critic_score - x.average_critic_score);\n            maxSale = dataValue[0].average_critic_score;\n        }\n        let maxlength = 0;\n        for (let i = 0; i < dataValue.length; i++) {\n            maxlength = Math.max(maxlength, dataValue[i].publisher.length);\n        }\n        let font = {height: 13, margin: 7.5 * maxlength};\n\n        let maxHeight = (rect.marginV + rect.height) * (dataValue.length - 1) + rect.marginT;\n\n\n        // load data to svg\n        let groups = svg.selectAll(\"g\").data(dataValue).enter().append(\"g\").style(\"cursor\", \"pointer\");\n\n        // load labels and rects to svg\n        let labels = groups.append(\"text\").text(d => d.publisher).attr(\"id\", \"label\").attr(\"x\", rect.marginH).style(\"font-size\", `${font.height}px`).on(\"click\", function (d) {\n            if (d[\"game\"].length !== 0) {\n                console.log(d);\n                console.log(index);\n                document.getElementById(\"controller\").style.visibility = \"hidden\";\n                document.getElementById(\"option\").style.visibility = \"hidden\";\n                stop = true;\n                clearInterval(intervalId);\n                d3.selectAll(\"svg > *\").remove();\n                svg = d3.select(\"svg\").append(\"g\");\n                dataEntry = d;\n                dataValue = dataEntry[\"game\"].sort((x, y) => y.game_global_sale - x.game_global_sale);\n                if (dataValue.length > 20) {\n                    dataValue = dataValue.slice(0, 20)\n                }\n                maxSale = dataValue[0].game_global_sale;\n                maxlength = 0;\n                for (let i = 0; i < dataValue.length; i++) {\n                    maxlength = Math.max(maxlength, dataValue[i].game_name.length);\n                }\n                font = {height: 12, margin: 6.8 * maxlength};\n                maxHeight = (rect.marginV + rect.height) * (dataValue.length - 1) + rect.marginT;\n                groups = svg.selectAll(\"g\").data(dataValue).enter().append(\"g\").style(\"cursor\", \"pointer\").on(\"click\", () => {\n                    draw();\n                });\n                let gamelabels = groups.append(\"text\").text(d => d.game_name).attr(\"x\", rect.marginH).style(\"font-size\", `${font.height}px`);\n                let rects = groups.append(\"rect\").attr(\"x\", rect.marginH + font.margin).attr(\"height\", rect.height).style(\"fill\", \"#f95e0a\");\n                let scale = d3.scaleLinear().domain([0, maxSale]).range([0, 400]);\n                if (maxlength > 40) {\n                    scale = d3.scaleLinear().domain([0, maxSale]).range([0, 300])\n                }\n                gamelabels.data(dataValue, d => d.game_name).transition().duration(600).attr(\"y\", (_, i) => (rect.marginV + rect.height) * i + rect.marginT + rect.height / 2);\n                rects.data(dataValue, d => d.game_name).transition().duration(600).attr(\"y\", (_, i) => (rect.marginV + rect.height) * i + rect.marginT).attr(\"width\", d => scale(d.game_global_sale));\n                let xScale = d3.scaleLinear().domain([0, maxSale]).range([0, 400]);\n                if (maxlength > 40) {\n                    xScale = d3.scaleLinear().domain([0, maxSale]).range([0, 300]);\n                }\n                let xAxis = d3.axisBottom(xScale).ticks(10).tickFormat(d3.format(\".1f\"));\n                svg.append(\"g\").attr(\"transform\", \"translate(\" + (rect.marginH + font.margin) + \",\" + (maxHeight + rect.height + rect.marginV) + \")\").call(xAxis);\n                if (maxlength > 40) {\n                    svg.append(\"text\")\n                        .attr(\"x\", rect.marginH + font.margin + 315).attr(\"y\", maxHeight + rect.height + rect.marginV + 5)\n                        .attr(\"id\", \"legend\")\n                        .text(\"Million USD\")\n                        .style(\"font-size\", \"13\");\n                } else {\n                    svg.append(\"text\")\n                        .attr(\"x\", rect.marginH + font.margin + 415).attr(\"y\", maxHeight + rect.height + rect.marginV + 5)\n                        .attr(\"id\", \"legend\")\n                        .text(\"Million USD\")\n                        .style(\"font-size\", \"13\");\n                }\n                svg.append(\"text\")\n                    .attr(\"x\", rect.marginH).attr(\"y\", rect.marginV + 5)\n                    .text(\"All game published by \" + d.publisher + \" in \" + (index % dat.length + 2003))\n                    .style(\"font-size\", \"20\");\n            } else {\n                window.alert(d[\"publisher\"] + \" published no games this year!\");\n            }\n        });\n\n        let rects = groups.append(\"rect\").attr(\"id\", \"rect\").attr(\"x\", rect.marginH + font.margin).attr(\"height\", rect.height);\n\n        // type means the which radio button is checked\n        function updateElements(type) {\n\n            let scale = d3.scaleLinear().domain([0, maxSale]).range([0, 500]);\n            labels.data(dataValue, d => d.publisher).transition().duration(600).attr(\"y\", (_, i) => (rect.marginV + rect.height) * i + rect.marginT + rect.height / 2);\n            if (type === \"total_global_sale\") {\n                d3.selectAll(\"#rect\").style(\"fill\", \"#d51c00\");\n                rects.data(dataValue, d => d.publisher).transition().duration(600).attr(\"y\", (_, i) => (rect.marginV + rect.height) * i + rect.marginT).attr(\"width\", d => scale(d.total_global_sale));\n            } else if (type === \"average_global_sale\") {\n                d3.selectAll(\"#rect\").style(\"fill\", \"#21a0b4\");\n                rects.data(dataValue, d => d.publisher).transition().duration(600).attr(\"y\", (_, i) => (rect.marginV + rect.height) * i + rect.marginT).attr(\"width\", d => scale(d.average_global_sale));\n            } else if (type === \"average_user_score\") {\n                d3.selectAll(\"#rect\").style(\"fill\", \"#1f53a3\");\n                rects.data(dataValue, d => d.publisher).transition().duration(600).attr(\"y\", (_, i) => (rect.marginV + rect.height) * i + rect.marginT).attr(\"width\", d => scale(d.average_user_score));\n            } else if (type === \"average_critic_score\") {\n                d3.selectAll(\"#rect\").style(\"fill\", \"#fab500\");\n                rects.data(dataValue, d => d.publisher).transition().duration(600).attr(\"y\", (_, i) => (rect.marginV + rect.height) * i + rect.marginT).attr(\"width\", d => scale(d.average_critic_score));\n            }\n            // rerender the axis\n            let xScale = d3.scaleLinear().domain([0, maxSale]).range([0, 500]);\n\n            if (type === \"average_user_score\" || type === \"average_critic_score\") {\n                xScale = d3.scaleLinear().domain([0, 100]).range([0, 500]);\n            }\n\n            let xAxis = d3.axisBottom(xScale).ticks(10).tickFormat(d3.format(\"d\"));\n\n            if (type === \"average_global_sale\") {\n                xAxis = d3.axisBottom(xScale).ticks(10).tickFormat(d3.format(\".1f\"));\n            }\n\n            svg.append(\"g\").attr(\"id\", \"axis\").attr(\"transform\", \"translate(\" + (rect.marginH + font.margin) + \",\" + (maxHeight + rect.height + rect.marginV) + \")\").call(xAxis);\n            if (type === \"total_global_sale\" || type === \"average_global_sale\") {\n                svg.append(\"text\")\n                    .attr(\"x\", rect.marginH + font.margin + 520).attr(\"y\", maxHeight + rect.height + rect.marginV + 5)\n                    .attr(\"id\", \"legend\")\n                    .text(\"Million USD\")\n                    .style(\"font-size\", \"13\");\n            }\n        }\n\n        if (!stop)\n            updateElements(d3.select(\"input[name='type']:checked\").node().value);\n\n        function update(i, type) {\n            rangeSlider.value = i % dat.length + 2003;\n            rangeBullet.innerHTML = rangeSlider.value;\n            var bulletPosition = ((rangeSlider.value - rangeSlider.min)/(rangeSlider.max - rangeSlider.min));\n            rangeBullet.style.left = (bulletPosition * 578) + \"px\";\n            if (!stop) {\n                // update the data and year\n                dataEntry = dat[i];\n                if (type === \"total_global_sale\") {\n                    dataValue = dataEntry[\"entities\"].sort((x, y) => y.total_global_sale - x.total_global_sale);\n                    maxSale = dataValue[0].total_global_sale;\n                } else if (type === \"average_global_sale\") {\n                    dataValue = dataEntry[\"entities\"].sort((x, y) => y.average_global_sale - x.average_global_sale);\n                    maxSale = dataValue[0].average_global_sale;\n                } else if (type === \"average_user_score\") {\n                    dataValue = dataEntry[\"entities\"].sort((x, y) => y.average_user_score - x.average_user_score);\n                    maxSale = dataValue[0].average_user_score;\n                } else if (type === \"average_critic_score\") {\n                    dataValue = dataEntry[\"entities\"].sort((x, y) => y.average_critic_score - x.average_critic_score);\n                    maxSale = dataValue[0].average_critic_score;\n                }\n\n                // remove the old axis\n                d3.select(\"#axis\").remove();\n                d3.select(\"#legend\").remove();\n\n                updateElements(type)\n            }\n        }\n\n        var intervalId;\n\n        function updateGraphType(type) {\n            update((index) % dat.length, type)\n            clearInterval(intervalId);\n            d3.select(\"#play_pause_button\").classed(\"paused\", true)\n            // intervalId = setInterval(() => update((index++) % dat.length, type), 700);\n        }\n\n        // radio button are selected\n        d3.selectAll(\"input[name='type']\").on(\"change\", function () {\n            clearInterval(intervalId);\n            d3.select(\"#play_pause_button\").classed(\"paused\", false)\n            updateGraphType(this.value);\n        });\n\n        d3.select(\"#play_pause_button\").on(\"click\", function() {\n            if (d3.select(\"#play_pause_button\").classed(\"paused\")) {\n                d3.select(\"#play_pause_button\").classed(\"paused\", false)\n            } else {\n                d3.select(\"#play_pause_button\").classed(\"paused\", true)\n            }\n            if (d3.select(\"#play_pause_button\").classed(\"paused\")) {\n                for (var i = 1; i <= intervalId; i++)\n                    clearInterval(i);\n            } else {\n                intervalId = setInterval(() => update((++index) % dat.length,  d3.select(\"input[name='type']:checked\").node().value), 1500);\n            }\n        });\n\n        d3.select(\"#year_slider\").on(\"input\", function() {\n            d3.select(\"#play_pause_button\").classed(\"paused\", true);\n            clearInterval(intervalId);\n            index = this.value - 2003;\n            update(index % dat.length,  d3.select(\"input[name='type']:checked\").node().value)\n        });\n        d3.select(\"#play_pause_button\").classed(\"paused\", true)\n        // intervalId = setInterval(() => update((++index) % dat.length, d3.select(\"input[name='type']:checked\").node().value), 700);\n    }\n    draw();\n});\n"]}