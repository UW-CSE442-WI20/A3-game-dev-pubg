{"version":3,"sources":["index.js"],"names":["$","document","ready","btn","click","toggleClass","rangeSlider","getElementById","rangeBullet","showSliderValue","innerHTML","value","bulletPosition","min","max","style","left","addEventListener","index","d3","json","then","dat","draw","selectAll","remove","visibility","select","classed","rect","intervalId","height","marginV","marginH","marginT","font","margin","svg","append","stop","dataEntry","length","dataValue","sort","x","y","total_global_sale","maxSale","maxHeight","comment","attr","text","year","groups","data","enter","labels","d","publisher","on","clearInterval","game_global_sale","gamelabels","game_name","rects","scale","scaleLinear","domain","range","transition","duration","_","i","xScale","xAxis","axisBottom","ticks","tickFormat","format","call","updateElements","type","average_global_sale","average_user_score","average_critic_score","update","node","updateGraphType","setInterval"],"mappings":"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","file":"src.de1dab9e.js","sourceRoot":"../src","sourcesContent":["$(document).ready(function() {\n    var btn = $(\".button\");\n    btn.click(function() {\n      btn.toggleClass(\"paused\");\n      return false;\n    });\n  });\n\nvar rangeSlider = document.getElementById(\"year_slider\");\nvar rangeBullet = document.getElementById(\"rs-bullet\");\n\nrangeSlider.addEventListener(\"input\", showSliderValue, false);\n\nfunction showSliderValue() {\n  rangeBullet.innerHTML = rangeSlider.value;\n  var bulletPosition = ((rangeSlider.value - rangeSlider.min)/(rangeSlider.max - rangeSlider.min));\n  rangeBullet.style.left = (bulletPosition * 578) + \"px\";\n}\n\nlet index = 0;\nd3.json(\"https://raw.githubusercontent.com/UW-CSE442-WI20/A3-game-dev-pubg/master/src/game_data.json\").then( dat => {\n    function draw() {\n        // define the svg\n        d3.selectAll(\"svg > *\").remove();\n        document.getElementById(\"controller\").style.visibility = \"visible\";\n        d3.select(\"#play_pause_button\").classed(\"paused\", false)\n\n        const rect = {height: 20, marginV: 10, marginH: 10, marginT: 40};\n        const font = {height: 10, margin: 100};\n        let svg = d3.select(\"svg\").append(\"g\");\n        let stop = false;\n\n        // load the initial data\n        \n        let dataEntry = dat[index % dat.length];\n\n        let dataValue = dataEntry[\"entities\"].sort((x, y) => y.total_global_sale - x.total_global_sale);\n        let maxSale = dataValue[0].total_global_sale;\n\n        let maxHeight = (rect.marginV + rect.height) * (dataValue.length - 1) + rect.marginT;\n        let comment = svg.append(\"text\").attr(\"x\", 300).attr(\"y\", maxHeight).attr(\"fill\", \"grey\").text(dataEntry.year).style(\"font-size\", \"40\");\n\n        // load data to svg\n        let groups = svg.selectAll(\"g\").data(dataValue).enter().append(\"g\").style(\"cursor\", \"pointer\");\n\n        // load labels and rects to svg\n        let labels = groups.append(\"text\").text(d => d.publisher).attr(\"id\", \"label\").attr(\"x\", rect.marginH).style(\"font-size\", `${font.height}px`).on(\"click\", function (d) {\n            document.getElementById(\"controller\").style.visibility = \"hidden\";    \n            stop = true;\n            clearInterval(intervalId);\n            d3.selectAll(\"svg > *\").remove();\n            svg = d3.select(\"svg\").append(\"g\");\n            dataEntry = d;\n            dataValue = dataEntry[\"game\"].sort((x, y) => y.game_global_sale - x.game_global_sale);\n            maxSale = dataValue[0].game_global_sale;\n            maxHeight = (rect.marginV + rect.height) * (dataValue.length - 1) + rect.marginT;\n            groups = svg.selectAll(\"g\").data(dataValue).enter().append(\"g\").style(\"cursor\", \"pointer\").on(\"click\", () => {\n                draw();\n                index--;\n            });\n            let gamelabels = groups.append(\"text\").text(d => d.game_name).attr(\"x\", rect.marginH).style(\"font-size\", `${font.height}px`);\n            let rects = groups.append(\"rect\").attr(\"x\", rect.marginH + font.margin).attr(\"height\", rect.height);\n            let scale = d3.scaleLinear().domain([0, maxSale]).range([0, 300]);\n            gamelabels.data(dataValue, d => d.game_name).transition().duration(600).attr(\"y\", (_, i) => (rect.marginV + rect.height) * i + rect.marginT + rect.height / 2);\n            rects.data(dataValue, d => d.game_name).transition().duration(600).attr(\"y\", (_, i) => (rect.marginV + rect.height) * i + rect.marginT).attr(\"width\", d => scale(d.game_global_sale));\n            let xScale = d3.scaleLinear().domain([0, maxSale]).range([0, 300]);\n            let xAxis = d3.axisBottom(xScale).ticks(10).tickFormat(d3.format(\".1f\"));\n            svg.append(\"g\").attr(\"transform\", \"translate(\" + (rect.marginH + font.margin) + \",\" + (maxHeight + rect.height + rect.marginV) + \")\").call(xAxis);\n        });\n\n        let rects = groups.append(\"rect\").attr(\"id\", \"rect\").attr(\"x\", rect.marginH + font.margin).attr(\"height\", rect.height);\n\n        // type means the which radio button is checked\n        function updateElements(type) {\n\n            let scale = d3.scaleLinear().domain([0, maxSale]).range([0, 300]);\n            labels.data(dataValue, d => d.publisher).transition().duration(600).attr(\"y\", (_, i) => (rect.marginV + rect.height) * i + rect.marginT + rect.height / 2);\n            if (type === \"total_global_sale\") {\n                rects.data(dataValue, d => d.publisher).transition().duration(600).attr(\"y\", (_, i) => (rect.marginV + rect.height) * i + rect.marginT).attr(\"width\", d => scale(d.total_global_sale));\n            } else if (type === \"average_global_sale\") {\n                rects.data(dataValue, d => d.publisher).transition().duration(600).attr(\"y\", (_, i) => (rect.marginV + rect.height) * i + rect.marginT).attr(\"width\", d => scale(d.average_global_sale));\n            } else if (type === \"average_user_score\") {\n                rects.data(dataValue, d => d.publisher).transition().duration(600).attr(\"y\", (_, i) => (rect.marginV + rect.height) * i + rect.marginT).attr(\"width\", d => scale(d.average_user_score));\n            } else if (type === \"average_critic_score\") {\n                rects.data(dataValue, d => d.publisher).transition().duration(600).attr(\"y\", (_, i) => (rect.marginV + rect.height) * i + rect.marginT).attr(\"width\", d => scale(d.average_critic_score));\n            }\n            // rerender the axis\n            let xScale = d3.scaleLinear().domain([0, maxSale]).range([0, 300]);\n\n            if (type === \"average_user_score\" || type === \"average_critic_score\") {\n                xScale = d3.scaleLinear().domain([0, 100]).range([0, 300]);\n            }\n\n            let xAxis = d3.axisBottom(xScale).ticks(10).tickFormat(d3.format(\"d\"));\n\n            if (type === \"average_global_sale\") {\n                xAxis = d3.axisBottom(xScale).ticks(10).tickFormat(d3.format(\".1f\"));\n            }\n\n            svg.append(\"g\").attr(\"id\", \"axis\").attr(\"transform\", \"translate(\" + (rect.marginH + font.margin) + \",\" + (maxHeight + rect.height + rect.marginV) + \")\").call(xAxis);\n        }\n\n        if (!stop)\n            updateElements(d3.select(\"input[name='type']:checked\").node().value);\n\n        function update(i, type) {\n            rangeSlider.value = i % dat.length + 2003;\n            rangeBullet.innerHTML = rangeSlider.value;\n            var bulletPosition = ((rangeSlider.value - rangeSlider.min)/(rangeSlider.max - rangeSlider.min));\n            rangeBullet.style.left = (bulletPosition * 578) + \"px\";\n            if (!stop) {\n                // update the data and year\n                dataEntry = dat[i];\n                if (type === \"total_global_sale\") {\n                    dataValue = dataEntry[\"entities\"].sort((x, y) => y.total_global_sale - x.total_global_sale);\n                    maxSale = dataValue[0].total_global_sale;\n                } else if (type === \"average_global_sale\") {\n                    dataValue = dataEntry[\"entities\"].sort((x, y) => y.average_global_sale - x.average_global_sale);\n                    maxSale = dataValue[0].average_global_sale;\n                } else if (type === \"average_user_score\") {\n                    dataValue = dataEntry[\"entities\"].sort((x, y) => y.average_user_score - x.average_user_score);\n                    maxSale = dataValue[0].average_user_score;\n                } else if (type === \"average_critic_score\") {\n                    dataValue = dataEntry[\"entities\"].sort((x, y) => y.average_critic_score - x.average_critic_score);\n                    maxSale = dataValue[0].average_critic_score;\n                }\n                comment.text(dataEntry.year);\n\n                // remove the old axis\n                d3.select(\"#axis\").remove();\n\n                updateElements(type)\n            }\n        }\n\n        var intervalId;\n\n        function updateGraphType(type) {\n            index = 0;\n            update((index++) % dat.length, type)\n            intervalId = setInterval(() => update((index++) % dat.length, type), 700);\n        }\n\n        // radio button are selected\n        d3.selectAll(\"input[name='type']\").on(\"change\", function () {\n            clearInterval(intervalId);\n            d3.select(\"#play_pause_button\").classed(\"paused\", false)\n            updateGraphType(this.value);\n        });\n\n        d3.select(\"#play_pause_button\").on(\"click\", function() {\n            if (d3.select(\"#play_pause_button\").classed(\"paused\")) {\n                for (var i = 1; i <= intervalId; i++)\n                    clearInterval(i);\n            } else {\n                intervalId = setInterval(() => update((++index) % dat.length,  d3.select(\"input[name='type']:checked\").node().value), 700);\n            }\n        });\n\n        d3.select(\"#year_slider\").on(\"input\", function() {\n            d3.select(\"#play_pause_button\").classed(\"paused\", true);\n            clearInterval(intervalId);\n            index = this.value - 2003;\n            update(index % dat.length,  d3.select(\"input[name='type']:checked\").node().value)\n        });\n\n        intervalId = setInterval(() => update((++index) % dat.length, d3.select(\"input[name='type']:checked\").node().value), 700);\n    }\n    draw();\n});\n\n"]}